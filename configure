#!/bin/bash
help='Usage: ./configure [options]

Options:
  --static                Link statically
  --static-lib <library>  Link LIBRARY statically
  --debug                 Enable debugging symbols
  --profile               Enable profiling
  --without-posix         Disable use of POSIX library functions (default: autodetect)
  --with-posix            Enable use of POSIX library functions (default: autodetect)
  --cc <compiler>         Use COMPILER rather than autodetecting

Libraries (case insensitive):
  FFTW
  GLFW
  GLEW
  GL
'

usage() {
  echo -n "$help"
  exit "${1:-0}"
}

missing_arg() {
  echo "Option '$1' requires an argument" >&2
  exit 1
}

# Create skeleton of config.mk
echo "# DO NOT EDIT THIS FILE" >config.mk
echo "# Use ./configure instead" >>config.mk

# Option parsing
parse_opts() {
  local arg="$1"
  while shift; do
    case "$arg" in
    -h)
      usage;;

    --static)
      echo 'STATIC := y' >>config.mk
      ;;

    --static-lib)
      local lib="$1"
      shift || missing_arg "$arg"
      echo "STATIC_${lib^^} := y" >>config.mk
      ;;

    --debug)
      echo 'DEBUG := y' >>config.mk
      ;;

    --profile)
      echo 'PROFILE := y' >>config.mk
      ;;

    --without-posix)
      echo 'NO_POSIX := y' >>config.mk
      no_detect_posix=y
      ;;

    --with-posix)
      echo 'POSIX := y' >>config.mk
      no_detect_posix=y
      ;;

    --cc)
      cc="$1"
      shift || missing_arg "$arg"
      no_detect_cc=y
      ;;

    *)
      echo "Invalid option '$arg'" >&2
      echo >&2
      usage 1;;
    esac
    arg="$1"
  done
}
parse_opts "$@"

# Autodetection
if [ -z "$no_detect_cc" ]; then
  echo "Detecting compiler:" >&2
  for compiler in c99 cc gcc clang; do
    echo "  Checking for $compiler..." >&2
    if type "$compiler" >/dev/null 2>&1; then
      cc="$compiler"
      break
    fi
  done
fi

case "$cc" in
gcc|clang)
  cc="$cc -std=c99"
esac

echo "CC := $cc" >>config.mk

if [ -z "$no_detect_posix" ]; then
  echo -n "Detecting whether POSIX is available... " >&2
  if echo '#include <unistd.h>' | gcc -E - >/dev/null 2>&1; then
    echo "yes" >&2
  else
    echo "no" >&2
    echo "NO_POSIX=y" >>config.mk
  fi
fi

# Package configuration
packages=(
  fftw3
  glfw3
  glew
  gl
)

for pkg in "${packages[@]}"; do
  echo "Configuring $pkg..." >&2
  echo "LDFLAGS += $(pkg-config --libs "$pkg")" >>config.mk
  echo "CFLAGS += $(pkg-config --cflags "$pkg")" >>config.mk
done
